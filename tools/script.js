let activeDropdown = null;

// Language translations object
const translations = {
    english: {
        'page-title': 'Hami-Nepali | Plan Nepal -Hamro Nepal',
        'login-title': 'Login',
        'login-button': 'Login',
        'register-title': 'Register',
        'register-button': 'Register',
        'social-login-title': 'Social Login',
        'google-login': 'Login with Google',
        'facebook-login': 'Login with Facebook',
        'nav-home': 'ЁЯЗ│ЁЯЗ╡ My Nepal ЁЯЗ│ЁЯЗ╡',
        'nav-beauty': 'ЁЯМИ Beauty on Eye',
        'mero-plan': 'ЁЯЗ│ЁЯЗ╡ЁЯОп My Plan ЁЯМ╕',
        'nav-positivity': 'ЁЯЗ│ЁЯЗ╡ Nepal\'s Positivity ЁЯМ╕',
        'nav-hope': 'ЁЯХКя╕П But Hope Remains',
        'nav-youth': 'ЁЯСйтАНЁЯОУ Educated & Skilled Youth',
        'nav-plan': 'ЁЯОп My Plan',
        'nav-education': 'ЁЯУЪ Education Plan',
        'nav-jobs': 'Jobs Available',
        'nav-homes': 'ЁЯПа Housing and Education',
        'nav-child-protection': 'Child Protection & Education',
        'nav-corruption': 'Corruption',
        'nav-corruption-how': 'ЁЯЗ│ЁЯЗ╡ How Nepal Became a Corrupt Nation? ЁЯХ│я╕П',
        'nav-corruption-wealth': 'ЁЯЪл Leaders\' Wealth',
        'nav-corruption-stop': 'ЁЯЪл End Corruption',
        'nav-health': 'Healthcare Services ЁЯй║',
        'nav-food': 'Food Security',
        'nav-stop-corruption': 'ЁЯЪл Control Corruption',
        'nav-contact': 'Contact',
        'hero-title': 'ЁЯЗ│ЁЯЗ╡ Nepal: Land of Himalayas, Abode of Peace ЁЯЗ│ЁЯЗ╡',
        'hero-subtitle': 'Home to the majestic Himalayas, birthplace of Buddha, and rich in diverse cultures and traditions. Nepal\'s natural beauty, cultural heritage, and spiritual significance are unique in the world.',
        'myhero-title': 'ЁЯЗ│ЁЯЗ╡ Please Contact Us рд╕рдореНрдкрд░реНрдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН ЁЯЗ│ЁЯЗ╡',
        'myhero-subtitle': 'Home to the majestic Himalayas, birthplace of Buddha, and rich in diverse cultures and traditions. Nepal\'s natural beauty, cultural heritage, and spiritual significance are unique in the world.',
        'myhero-description': ' Please fill the form below to contact us !!! рд╣рд╛рдореАрд▓рд╛рдИ рд╕рдореНрдкрд░реНрдХ рдЧрд░реНрдирдХреЛ рд▓рд╛рдЧрд┐ рддрд▓рдХреЛ рдлрд╛рд░рдо рднрд░реНрдиреБрд╣реЛрд╕реНред',
        'hero-description': 'Discover Nepal\'s journey towards food security and sustainable agriculture. Learn about innovative farming systems, food distribution networks, and initiatives to eliminate hunger while promoting agricultural self-sufficiency across urban and rural areas.',
        'nepal-title': 'ЁЯЗ│ЁЯЗ╡ Nepal: Nature\'s Precious Gift and Humanity\'s Heritage ЁЯЗ│ЁЯЗ╡',
        'nepal-subtitle': 'Rich in mountains, rivers, forests, and biodiversity - Preserving Nepal\'s natural wealth and cultural heritage is our shared responsibility',
        'sector-nature': '1. Mountains and Natural Beauty',
        'stat-peaks': 'Himalayan Peaks',
        'stat-peaks-desc': 'Above 8,000 meters',
        'stat-parks': 'National Parks',
        'stat-parks-desc': 'Protected Areas',
        'stat-biodiversity': 'Biodiversity',
        'stat-biodiversity-desc': 'Plant Species',
        'nature-description': 'Nepal is nature\'s precious gift. Its mountains, rivers, forests, and biodiversity are unique worldwide. Sagarmatha (Everest) is the world\'s highest peak, which has enhanced Nepal\'s glory.',
        'nature-progress': '100% Natural Resources',
        'nature-features': 'Natural Features',
        'nature-feature-1': 'Himalayan Mountain Range: Sagarmatha, Kanchenjunga, Dhaulagiri, Annapurna',
        'nature-feature-2': 'Sacred Lakes: Tilicho, Rara, Phewa, Begnas',
        'nature-feature-3': 'World Heritage Sites: Lumbini, Chitwan National Park, Kathmandu Valley',
        'nature-feature-4': 'Diverse Climate: From Tropical to Himalayan Regions',
        'nature-feature-5': 'World-Famous Trekking Routes',
        'nature-special': 'Special Natural Features',
        'nature-special-1': 'Kali Gandaki Gorge: World\'s Deepest Gorge',
        'nature-special-2': 'Rara Lake: Nepal\'s Largest Lake',
        'nature-special-3': 'Mustang: Living Museum of Ancient Tibetan Culture',
        'nature-special-4': 'Annapurna Conservation Area: World\'s Most Visited Trekking Area',
        'footer-title': 'MERO NEPAL',
        'footer-quote': '"Natural resources are Nepal\'s invaluable assets тАФ conservation and wise use is the path to prosperity." ЁЯЗ│ЁЯЗ╡',
        'footer-description': 'Nepal is a beautiful country rich in natural resources. Mountains, rivers, forests, minerals, water resources, wildlife, and biodiversity are Nepal\'s most important assets.',
        'footer-design': 'Designed with тЭдя╕П by Subash',
        'footer-copyright': '┬й 2025 News--War. All rights reserved.',
        'nepal-hope-title': '1. Direction of Nepal\'s Hope and Future',
        'nepal-opportunities-title': '2. Development Opportunities',
        'nepal-education-title': '3. Education and Capacity Building',
        'nepal-health-title': '4. Healthcare and Wellness',
        'nepal-culture-title': '5. Cultural Heritage and Tourism',
        'stat-farmers': '3M+',
        'stat-farmers-label': 'Farming Families',
        'stat-production': '85%',
        'stat-production-label': 'Food Production',
        'stat-land': '21%',
        'stat-land-label': 'Arable Land',
        'nepal-positivity-title': 'ЁЯЗ│ЁЯЗ╡ Nepal\'s Positivity ЁЯМ╕',
        'nepal-positivity-subtitle': 'Nepal is a beautiful Himalayan nation in Asia. The world\'s highest peak, Mount Everest (Sagarmatha), is located in this country. Nepal is a land rich in diverse cultures, ethnicities, languages, and traditions.'
    },
    nepali: {
        'page-title': 'рд╣рд╛рдореА-рдиреЗрдкрд╛рд▓реА | рдкреНрд▓рд╛рди рдиреЗрдкрд╛рд▓ -рд╣рд╛рдореНрд░реЛ рдиреЗрдкрд╛рд▓',
        'login-title': 'рд▓рдЧ рдЗрди',
        'login-button': 'рд▓рдЧ рдЗрди',
        'register-title': 'рджрд░реНрддрд╛',
        'register-button': 'рджрд░реНрддрд╛',
        'social-login-title': 'рд╕рд╛рдорд╛рдЬрд┐рдХ рд▓рдЧ рдЗрди',
        'google-login': 'рдЧреБрдЧрд▓рдмрд╛рдЯ рд▓рдЧ рдЗрди',
        'facebook-login': 'рдлреЗрд╕рдмреБрдХрдмрд╛рдЯ рд▓рдЧ рдЗрди',
        'nav-home': 'ЁЯЗ│ЁЯЗ╡ рдореЗрд░реЛ рдиреЗрдкрд╛рд▓ ЁЯЗ│ЁЯЗ╡',
        'nav-beauty': 'ЁЯМИ рд╕реМрдиреНрджрд░реНрдп рдЖрдБрдЦрд╛рд▓реЗ рджреЗрдЦрд┐рдиреНрдЫ',
        'mero-plan': 'ЁЯЗ│ЁЯЗ╡ ЁЯОп рдореЗрд░реЛ рдпреЛрдЬрдирд╛ ЁЯМ╕',
        'nav-positivity': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓рдХреЛ рд╕рдХрд╛рд░рд╛рддреНрдордХрддрд╛ ЁЯМ╕',
        'nav-hope': 'ЁЯХКя╕П рддрд░ рдЖрд╢рд╛ рдмрд╛рдБрдХреА рдЫ',
        'nav-youth': 'ЁЯСйтАНЁЯОУ рд╢рд┐рдХреНрд╖рд┐рдд рд░ рд╕реАрдкрдпреБрдХреНрдд рдпреБрд╡рд╛ рдкреБрд╕реНрддрд╛',
        'nav-plan': 'ЁЯОп рдореЗрд░реЛ рдпреЛрдЬрдирд╛',
        'nav-education': 'ЁЯУЪ рд╢рд┐рдХреНрд╖рд╛ рдпреЛрдЬрдирд╛',
        'nav-jobs': 'рд░реЛрдЬрдЧрд╛рд░реА рдЙрдкрд▓рдмреНрдз',
        'nav-homes': 'ЁЯПа рдЖрд╡рд╛рд╕ рд░ рд╢рд┐рдХреНрд╖рд╛',
        'nav-child-protection': 'рдмрд╛рд▓ рд╕рдВрд░рдХреНрд╖рдг рд░ рд╢рд┐рдХреНрд╖рд╛',
        'nav-corruption': 'рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░',
        'nav-corruption-how': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓ рдХрд╕рд░реА рднреНрд░рд╖реНрдЯ рд░рд╛рд╖реНрдЯреНрд░ рдмрдиреНрджреИ рдЧрдпреЛ? ЁЯХ│я╕П',
        'nav-corruption-wealth': 'ЁЯЪл рдиреЗрддрд╛рдХреЛ рд╕рдореНрдкрддреНрддрд┐',
        'nav-corruption-stop': 'ЁЯЪл рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░ рдЕрдиреНрддреНрдп рдЧрд░реНрдиреЗ',
        'nav-health': 'рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ ЁЯй║',
        'nav-food': 'рдЖрд╣рд╛рд░ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд',
        'nav-stop-corruption': 'ЁЯЪл рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░ рдирд┐рдпрдиреНрддреНрд░рдг',
        'nav-contact': 'рд╕рдореНрдкрд░реНрдХ',
        'hero-title': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓: рд╣рд┐рдорд╛рд▓рдХреЛ рднреВрдорд┐, рд╢рд╛рдиреНрддрд┐рдХреЛ рдзрд╛рдо ЁЯЗ│ЁЯЗ╡',
        'hero-subtitle': 'рд╣рд┐рдорд╛рд▓рдХреЛ рдЧреМрд░рд╡, рдмреБрджреНрдзрдХреЛ рдЬрдиреНрдорд╕реНрдерд╛рди, рд░ рд╡рд┐рд╡рд┐рдз рд╕рдВрд╕реНрдХреГрддрд┐ рд░ рдкрд░рдореНрдкрд░рд╛рдХреЛ рдзрдиреА рдиреЗрдкрд╛рд▓ред рдпрд╣рд╛рдБрдХреЛ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реМрдиреНрджрд░реНрдп, рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд рд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдорд╣рддреНрддреНрд╡ рд╡рд┐рд╢реНрд╡рднрд░рдорд╛ рдЕрджреНрд╡рд┐рддреАрдп рдЫред',    'myhero-title': ' ЁЯЗ│ЁЯЗ╡ Please Contact Us рд╕рдореНрдкрд░реНрдХ рдЧрд░реНрдиреБрд╣реЛрд╕реН ЁЯЗ│ЁЯЗ╡',
        'myhero-subtitle': 'рд╣рд┐рдорд╛рд▓рдХреЛ рдЧреМрд░рд╡, рдмреБрджреНрдзрдХреЛ рдЬрдиреНрдорд╕реНрдерд╛рди, рд░ рд╡рд┐рд╡рд┐рдз рд╕рдВрд╕реНрдХреГрддрд┐ рд░ рдкрд░рдореНрдкрд░рд╛рдХреЛ рдзрдиреА рдиреЗрдкрд╛рд▓ред рдпрд╣рд╛рдБрдХреЛ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реМрдиреНрджрд░реНрдп, рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд рд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдорд╣рддреНрддреНрд╡ рд╡рд┐рд╢реНрд╡рднрд░рдорд╛ рдЕрджреНрд╡рд┐рддреАрдп рдЫред',
        'myhero-description': 'рдиреЗрдкрд╛рд▓рдХреЛ рдЦрд╛рджреНрдп рд╕реБрд░рдХреНрд╖рд╛ рд░ рдЯрд┐рдХрд╛рдК рдХреГрд╖рд┐рдХреЛ рдпрд╛рддреНрд░рд╛ рдкрддреНрддрд╛ рд▓рдЧрд╛рдЙрдиреБрд╣реЛрд╕реНред рдирд╡реАрди рдХреГрд╖рд┐ рдкреНрд░рдгрд╛рд▓реА, рдЦрд╛рджреНрдп рд╡рд┐рддрд░рдг рдиреЗрдЯрд╡рд░реНрдХ, рд░ рд╢рд╣рд░реА рд░ рдЧреНрд░рд╛рдореАрдг рдХреНрд╖реЗрддреНрд░рд╣рд░реВрдорд╛ рдХреГрд╖рд┐ рдЖрддреНрдордирд┐рд░реНрднрд░рддрд╛рд▓рд╛рдИ рдмрдврд╛рд╡рд╛ рджрд┐рдиреЗ рдХрд╛рд░реНрдпрдХреНрд░рдорд╣рд░реВрдХреЛ рдмрд╛рд░реЗрдорд╛ рдЬрд╛рдиреНрдиреБрд╣реЛрд╕реНред',
        'nepal-title': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓: рдкреНрд░рдХреГрддрд┐рдХреЛ рдЕрдореВрд▓реНрдп рдЙрдкрд╣рд╛рд░ рд░ рдорд╛рдирд╡рддрд╛рдХреЛ рдзрд░реЛрд╣рд░ ЁЯЗ│ЁЯЗ╡',
        'nepal-subtitle': 'рд╣рд┐рдорд╛рд▓, рдирджреА, рдЬрдВрдЧрд▓ рд░ рдЬреИрд╡рд┐рдХ рд╡рд┐рд╡рд┐рдзрддрд╛рдХреЛ рдзрдиреА - рдиреЗрдкрд╛рд▓рдХреЛ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдореНрдкрджрд╛ рд░ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рддрдХреЛ рд╕рдВрд░рдХреНрд╖рдг рд╣рд╛рдореНрд░реЛ рд╕рд╛рдЭрд╛ рдЬрд┐рдореНрдореЗрд╡рд╛рд░реА',
        'stat-farmers': 'рейреж рд▓рд╛рдЦ+',
        'stat-farmers-label': 'рдХреГрд╖рдХ рдкрд░рд┐рд╡рд╛рд░',
        'stat-production': 'реорел%',
        'stat-production-label': 'рдЦрд╛рджреНрдп рдЙрддреНрдкрд╛рджрди',
        'stat-land': 'реирез%',
        'stat-land-label': 'рдХреГрд╖рд┐ рдпреЛрдЧреНрдп рдЬрдорд┐рди',
        'footer-title': 'рдореЗрд░реЛ рдиреЗрдкрд╛рд▓',
        'footer-quote': '"рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реНрд░реЛрддрд╣рд░реВ рдиреЗрдкрд╛рд▓рдХреЛ рдЕрдореВрд▓реНрдп рд╕рдореНрдкрддреНрддрд┐ рд╣реЛ тАФ рд╕рдВрд░рдХреНрд╖рдг рд░ рдмреБрджреНрдзрд┐рдорддреНрддрд╛рдкреВрд░реНрдг рдЙрдкрдпреЛрдЧ рд╕рдореГрджреНрдзрд┐рдХреЛ рдорд╛рд░реНрдЧ рд╣реЛред" ЁЯЗ│ЁЯЗ╡',
        'footer-description': 'рдиреЗрдкрд╛рд▓ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реНрд░реЛрддрд╣рд░реВрд▓реЗ рднрд░рд┐рдкреВрд░реНрдг рд╕реБрдиреНрджрд░ рджреЗрд╢ рд╣реЛред рд╣рд┐рдорд╛рд▓, рдирджреА, рдЬрдВрдЧрд▓, рдЦрдирд┐рдЬ, рдЬрд▓рд╕реНрд░реЛрдд, рд╡рдиреНрдпрдЬрдиреНрддреБ рд░ рдЬреИрд╡рд┐рдХ рд╡рд┐рд╡рд┐рдзрддрд╛ рдиреЗрдкрд╛рд▓рдХреЛ рд╕рдмреИрднрдиреНрджрд╛ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╕рдореНрдкрддреНрддрд┐ рд╣реЛред',
        'footer-design': 'рд╕реБрдмрд╛рд╕рджреНрд╡рд╛рд░рд╛ тЭдя╕П рд╕рдВрдЧ рдбрд┐рдЬрд╛рдЗрди рдЧрд░рд┐рдПрдХреЛ',
        'footer-copyright': '┬й реирежреирел рдиреНрдпреБрдЬ--рдпреБрджреНрдзред рд╕рд░реНрд╡рд╛рдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рддред',
        'nepal-positivity-title': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓рдХреЛ рд╕рдХрд╛рд░рд╛рддреНрдордХрддрд╛ ЁЯМ╕',
        'nepal-positivity-subtitle': 'рдиреЗрдкрд╛рд▓ рдПрд╢рд┐рдпрд╛рдХреЛ рдПрдХ рд╕реБрдиреНрджрд░ рд╣рд┐рдорд╛рд▓реА рд░рд╛рд╖реНрдЯреНрд░ рд╣реЛред рд╡рд┐рд╢реНрд╡рдХреЛ рд╕рд░реНрд╡реЛрдЪреНрдЪ рд╢рд┐рдЦрд░ рд╕рдЧрд░рдорд╛рдерд╛ (Mount Everest) рдпрд╣реА рджреЗрд╢рдорд╛ рдЕрд╡рд╕реНрдерд┐рдд рдЫред рдиреЗрдкрд╛рд▓ рд╡рд┐рд╡рд┐рдз рд╕рдВрд╕реНрдХреГрддрд┐, рдЬрд╛рддрдЬрд╛рддрд┐, рднрд╛рд╖рд╛ рд░ рдкрд░рдореНрдкрд░рд╛рд▓реЗ рднрд░рд┐рдПрдХреЛ рджреЗрд╢'
    },
    hindi: {
        'page-title': 'рд╣рдореА-рдиреЗрдкрд╛рд▓реА | рдкреНрд▓рд╛рди рдиреЗрдкрд╛рд▓ -рд╣рдорд╛рд░рд╛ рдиреЗрдкрд╛рд▓',
        'login-title': 'рд▓реЙрдЧ рдЗрди',
        'login-button': 'рд▓реЙрдЧ рдЗрди',
        'register-title': 'рдкрдВрдЬреАрдХрд░рдг',
        'register-button': 'рдкрдВрдЬреАрдХрд░рдг',
        'social-login-title': 'рд╕рд╛рдорд╛рдЬрд┐рдХ рд▓реЙрдЧ рдЗрди',
        'google-login': 'рдЧреВрдЧрд▓ рд╕реЗ рд▓реЙрдЧ рдЗрди',
        'facebook-login': 'рдлреЗрд╕рдмреБрдХ рд╕реЗ рд▓реЙрдЧ рдЗрди',
        'nav-home': 'ЁЯЗ│ЁЯЗ╡ рдореЗрд░рд╛ рдиреЗрдкрд╛рд▓ ЁЯЗ│ЁЯЗ╡',
        'nav-beauty': 'ЁЯМИ рдЖрдБрдЦреЛрдВ рдореЗрдВ рд╕реМрдВрджрд░реНрдп',
        'mero-plan': 'ЁЯЗ│ЁЯЗ╡ ЁЯОп рдореЗрд░реА рдпреЛрдЬрдирд╛ ЁЯМ╕',
        'nav-positivity': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓ рдХреА рд╕рдХрд╛рд░рд╛рддреНрдордХрддрд╛ ЁЯМ╕',
        'nav-hope': 'ЁЯХКя╕П рд▓реЗрдХрд┐рди рдЖрд╢рд╛ рдмрд╛рдХреА рд╣реИ',
        'nav-youth': 'ЁЯСйтАНЁЯОУ рд╢рд┐рдХреНрд╖рд┐рдд рдФрд░ рдХреБрд╢рд▓ рдпреБрд╡рд╛ рдкреАрдврд╝реА',
        'nav-plan': 'ЁЯОп рдореЗрд░реА рдпреЛрдЬрдирд╛',
        'nav-education': 'ЁЯУЪ рд╢рд┐рдХреНрд╖рд╛ рдпреЛрдЬрдирд╛',
        'nav-jobs': 'рд░реЛрдЬрдЧрд╛рд░ рдЙрдкрд▓рдмреНрдз',
        'nav-homes': 'ЁЯПа рдЖрд╡рд╛рд╕ рдФрд░ рд╢рд┐рдХреНрд╖рд╛',
        'nav-child-protection': 'рдмрд╛рд▓ рд╕рдВрд░рдХреНрд╖рдг рдФрд░ рд╢рд┐рдХреНрд╖рд╛',
        'nav-corruption': 'рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░',
        'nav-corruption-how': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓ рдХреИрд╕реЗ рднреНрд░рд╖реНрдЯ рд░рд╛рд╖реНрдЯреНрд░ рдмрди рдЧрдпрд╛? ЁЯХ│я╕П',
        'nav-corruption-wealth': 'ЁЯЪл рдиреЗрддрд╛рдУрдВ рдХреА рд╕рдВрдкрддреНрддрд┐',
        'nav-corruption-stop': 'ЁЯЪл рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░ рдХреЛ рдЕрдВрдд',
        'nav-health': 'рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛рдПрдВ ЁЯй║',
        'nav-food': 'рдЦрд╛рджреНрдп рд╕реБрд░рдХреНрд╖рд╛',
        'nav-stop-corruption': 'ЁЯЪл рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░ рдирд┐рдпрдВрддреНрд░рдг',
        'nav-contact': 'рд╕рдВрдкрд░реНрдХ',
        'hero-title': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓: рд╣рд┐рдорд╛рд▓рдп рдХреА рднреВрдорд┐, рд╢рд╛рдВрддрд┐ рдХрд╛ рдзрд╛рдо ЁЯЗ│ЁЯЗ╡',
        'hero-subtitle': 'рдорд╣рд╛рди рд╣рд┐рдорд╛рд▓рдп рдХрд╛ рдШрд░, рдмреБрджреНрдз рдХреА рдЬрдиреНрдорднреВрдорд┐, рдФрд░ рд╡рд┐рд╡рд┐рдз рд╕рдВрд╕реНрдХреГрддрд┐рдпреЛрдВ рдФрд░ рдкрд░рдВрдкрд░рд╛рдУрдВ рд╕реЗ рд╕рдореГрджреНрдз рдиреЗрдкрд╛рд▓ред рдпрд╣рд╛рдВ рдХреА рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реБрдВрджрд░рддрд╛, рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд рдФрд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдорд╣рддреНрд╡ рджреБрдирд┐рдпрд╛ рдореЗрдВ рдЕрджреНрд╡рд┐рддреАрдп рд╣реИред',
        'hero-description': 'рдиреЗрдкрд╛рд▓ рдХреА рдЦрд╛рджреНрдп рд╕реБрд░рдХреНрд╖рд╛ рдФрд░ рд╕реНрдерд╛рдпреА рдХреГрд╖рд┐ рдХреА рдпрд╛рддреНрд░рд╛ рдХреА рдЦреЛрдЬ рдХрд░реЗрдВред рдирд╡реАрди рдХреГрд╖рд┐ рдкреНрд░рдгрд╛рд▓рд┐рдпреЛрдВ, рдЦрд╛рджреНрдп рд╡рд┐рддрд░рдг рдиреЗрдЯрд╡рд░реНрдХ, рдФрд░ рд╢рд╣рд░реА рдФрд░ рдЧреНрд░рд╛рдореАрдг рдХреНрд╖реЗрддреНрд░реЛрдВ рдореЗрдВ рдХреГрд╖рд┐ рдЖрддреНрдордирд┐рд░реНрднрд░рддрд╛ рдХреЛ рдмрдврд╝рд╛рд╡рд╛ рджреЗрдиреЗ рд╡рд╛рд▓реЗ рдХрд╛рд░реНрдпрдХреНрд░рдореЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗрдВред',
        'nepal-title': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓: рдкреНрд░рдХреГрддрд┐ рдХрд╛ рдЕрдирдореЛрд▓ рдЙрдкрд╣рд╛рд░ рдФрд░ рдорд╛рдирд╡рддрд╛ рдХреА рдзрд░реЛрд╣рд░ ЁЯЗ│ЁЯЗ╡',
        'nepal-subtitle': 'рдкрд╣рд╛рдбрд╝реЛрдВ, рдирджрд┐рдпреЛрдВ, рдЬрдВрдЧрд▓реЛрдВ рдФрд░ рдЬреИрд╡ рд╡рд┐рд╡рд┐рдзрддрд╛ рд╕реЗ рд╕рдореГрджреНрдз - рдиреЗрдкрд╛рд▓ рдХреА рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдВрдкрджрд╛ рдФрд░ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд рдХрд╛ рд╕рдВрд░рдХреНрд╖рдг рд╣рдорд╛рд░реА рд╕рд╛рдЭрд╛ рдЬрд┐рдореНрдореЗрджрд╛рд░реА рд╣реИ',
        'stat-farmers': 'рейреж рд▓рд╛рдЦ+',
        'stat-farmers-label': 'рдХрд┐рд╕рд╛рди рдкрд░рд┐рд╡рд╛рд░',
        'stat-production': 'реорел%',
        'stat-production-label': 'рдЦрд╛рджреНрдп рдЙрддреНрдкрд╛рджрди',
        'stat-land': 'реирез%',
        'stat-land-label': 'рдХреГрд╖рд┐ рдпреЛрдЧреНрдп рднреВрдорд┐',
        'footer-title': 'рдореЗрд░рд╛ рдиреЗрдкрд╛рд▓',
        'footer-quote': '"рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдВрд╕рд╛рдзрди рдиреЗрдкрд╛рд▓ рдХреА рдЕрдореВрд▓реНрдп рд╕рдВрдкрддреНрддрд┐ рд╣реИрдВ тАФ рд╕рдВрд░рдХреНрд╖рдг рдФрд░ рдмреБрджреНрдзрд┐рдорд╛рди рдЙрдкрдпреЛрдЧ рд╕рдореГрджреНрдзрд┐ рдХрд╛ рдорд╛рд░реНрдЧ рд╣реИред" ЁЯЗ│ЁЯЗ╡',
        'footer-description': 'рдиреЗрдкрд╛рд▓ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдВрд╕рд╛рдзрдиреЛрдВ рд╕реЗ рднрд░рдкреВрд░ рд╕реБрдВрджрд░ рджреЗрд╢ рд╣реИред рдкрд╣рд╛рдбрд╝, рдирджрд┐рдпрд╛рдБ, рдЬрдВрдЧрд▓, рдЦрдирд┐рдЬ, рдЬрд▓ рд╕рдВрд╕рд╛рдзрди, рд╡рдиреНрдпрдЬреАрд╡ рдФрд░ рдЬреИрд╡ рд╡рд┐рд╡рд┐рдзрддрд╛ рдиреЗрдкрд╛рд▓ рдХреА рд╕рдмрд╕реЗ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╕рдВрдкрддреНрддрд┐ рд╣реИрдВред',
        'footer-design': 'рд╕реБрдмрд╛рд╕ рджреНрд╡рд╛рд░рд╛ тЭдя╕П рдХреЗ рд╕рд╛рде рдбрд┐рдЬрд╝рд╛рдЗрди рдХрд┐рдпрд╛ рдЧрдпрд╛',
        'footer-copyright': '┬й реирежреирел рдиреНрдпреВрдЬрд╝--рдпреБрджреНрдзред рд╕рд░реНрд╡рд╛рдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рддред',
        'nepal-positivity-title': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓ рдХреА рд╕рдХрд╛рд░рд╛рддреНрдордХрддрд╛ ЁЯМ╕',
        'nepal-positivity-subtitle': 'рдиреЗрдкрд╛рд▓ рдПрд╢рд┐рдпрд╛ рдХрд╛ рдПрдХ рд╕реБрдВрджрд░ рд╣рд┐рдорд╛рд▓рдпреА рд░рд╛рд╖реНрдЯреНрд░ рд╣реИред рд╡рд┐рд╢реНрд╡ рдХреА рд╕рдмрд╕реЗ рдКрдВрдЪреА рдЪреЛрдЯреА рдорд╛рдЙрдВрдЯ рдПрд╡рд░реЗрд╕реНрдЯ (рд╕рд╛рдЧрд░рдорд╛рдерд╛) рдЗрд╕ рджреЗрд╢ рдореЗрдВ рд╕реНрдерд┐рдд рд╣реИред рдиреЗрдкрд╛рд▓ рд╡рд┐рд╡рд┐рдз рд╕рдВрд╕реНрдХреГрддрд┐рдпреЛрдВ, рдЬрд╛рддрд┐рдпреЛрдВ, рднрд╛рд╖рд╛рдУрдВ рдФрд░ рдкрд░рдВрдкрд░рд╛рдУрдВ рд╕реЗ рднрд░рд╛ рджреЗрд╢ рд╣реИред'
    }
};

// Hero section content
const heroContent = {
    english: {
        title: "ЁЯЗ│ЁЯЗ╡ Nepal: Where Nature's Beauty Meets Human Spirit ЁЯЗ│ЁЯЗ╡",
        subtitle: "Discover the magic of Nepal - where majestic mountains touch the sky, ancient traditions whisper through valleys, and every sunrise brings new hope.",
        quote: "In the heart of the Himalayas, Nepal stands as a testament to nature's grandeur and human resilience."
    },
    nepali: {
        title: "ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓: рдкреНрд░рдХреГрддрд┐рдХреЛ рд╕реМрдиреНрджрд░реНрдп рд░ рдорд╛рдирд╡ рдЖрддреНрдорд╛рдХреЛ рдорд┐рд▓рдирд╕реНрдерд▓ ЁЯЗ│ЁЯЗ╡",
        subtitle: "рдиреЗрдкрд╛рд▓рдХреЛ рдЬрд╛рджреБ рдкрддреНрддрд╛ рд▓рдЧрд╛рдЙрдиреБрд╣реЛрд╕реН - рдЬрд╣рд╛рдБ рдЧреМрд░рд╡рд╢рд╛рд▓реА рд╣рд┐рдорд╛рд▓ рдЖрдХрд╛рд╢рд▓рд╛рдИ рдЫреБрдиреНрдЫ, рдкреНрд░рд╛рдЪреАрди рдкрд░рдореНрдкрд░рд╛рд╣рд░реВ рдЙрдкрддреНрдпрдХрд╛рд╣рд░реВрдорд╛ рдлреБрд╕реНрдХрдиреНрдЫрдиреН, рд░ рд╣рд░реЗрдХ рд╕реВрд░реНрдпреЛрджрдпрд▓реЗ рдирдпрд╛рдБ рдЖрд╢рд╛ рд▓реНрдпрд╛рдЙрдБрдЫред",
        quote: "рд╣рд┐рдорд╛рд▓рдХреЛ рдореБрдЯреБрдорд╛, рдиреЗрдкрд╛рд▓ рдкреНрд░рдХреГрддрд┐рдХреЛ рд╡реИрднрд╡ рд░ рдорд╛рдирд╡ рд╕рд╣рдирд╢реАрд▓рддрд╛рдХреЛ рдкреНрд░рдорд╛рдгрдХреЛ рд░реВрдкрдорд╛ рдЙрднрд┐рдПрдХреЛ рдЫред"
    },
    hindi: {
        title: "ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓: рдЬрд╣рд╛рдВ рдкреНрд░рдХреГрддрд┐ рдХреА рд╕реБрдВрджрд░рддрд╛ рдорд╛рдирд╡ рдЖрддреНрдорд╛ рд╕реЗ рдорд┐рд▓рддреА рд╣реИ ЁЯЗ│ЁЯЗ╡",
        subtitle: "рдиреЗрдкрд╛рд▓ рдХреЗ рдЬрд╛рджреВ рдХреА рдЦреЛрдЬ рдХрд░реЗрдВ - рдЬрд╣рд╛рдВ рднрд╡реНрдп рд╣рд┐рдорд╛рд▓рдп рдЖрдХрд╛рд╢ рдХреЛ рдЫреВрддреЗ рд╣реИрдВ, рдкреНрд░рд╛рдЪреАрди рдкрд░рдВрдкрд░рд╛рдПрдВ рдШрд╛рдЯрд┐рдпреЛрдВ рдореЗрдВ рдлреБрд╕рдлреБрд╕рд╛рддреА рд╣реИрдВ, рдФрд░ рд╣рд░ рд╕реВрд░реНрдпреЛрджрдп рдирдИ рдЖрд╢рд╛ рд▓рд╛рддрд╛ рд╣реИред",
        quote: "рд╣рд┐рдорд╛рд▓рдп рдХреЗ рд╣реГрджрдп рдореЗрдВ, рдиреЗрдкрд╛рд▓ рдкреНрд░рдХреГрддрд┐ рдХреА рднрд╡реНрдпрддрд╛ рдФрд░ рдорд╛рдирд╡ рд▓рдЪреАрд▓реЗрдкрди рдХрд╛ рдкреНрд░рдорд╛рдг рд╣реИред"
    }
};

// Nepal container content
const nepalContainerContent = {
    english: {
        title: "ЁЯЗ│ЁЯЗ╡ Nepal: Nature's Precious Gift and Humanity's Heritage ЁЯЗ│ЁЯЗ╡",
        subtitle: "Rich in mountains, rivers, forests, and biodiversity - Preserving Nepal's natural wealth and cultural heritage is our shared responsibility"
    },
    nepali: {
        title: "ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓: рдкреНрд░рдХреГрддрд┐рдХреЛ рдЕрдореВрд▓реНрдп рдЙрдкрд╣рд╛рд░ рд░ рдорд╛рдирд╡рддрд╛рдХреЛ рдзрд░реЛрд╣рд░ ЁЯЗ│ЁЯЗ╡",
        subtitle: "рд╣рд┐рдорд╛рд▓, рдирджреА, рдЬрдВрдЧрд▓ рд░ рдЬреИрд╡рд┐рдХ рд╡рд┐рд╡рд┐рдзрддрд╛рдХреЛ рдзрдиреА - рдиреЗрдкрд╛рд▓рдХреЛ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдореНрдкрджрд╛ рд░ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рддрдХреЛ рд╕рдВрд░рдХреНрд╖рдг рд╣рд╛рдореНрд░реЛ рд╕рд╛рдЭрд╛ рдЬрд┐рдореНрдореЗрд╡рд╛рд░реА"
    },
    hindi: {
        title: "ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓: рдкреНрд░рдХреГрддрд┐ рдХрд╛ рдЕрдирдореЛрд▓ рдЙрдкрд╣рд╛рд░ рдФрд░ рдорд╛рдирд╡рддрд╛ рдХреА рд╡рд┐рд░рд╛рд╕рдд ЁЯЗ│ЁЯЗ╡",
        subtitle: "рдкрд╣рд╛рдбрд╝реЛрдВ, рдирджрд┐рдпреЛрдВ, рдЬрдВрдЧрд▓реЛрдВ рдФрд░ рдЬреИрд╡ рд╡рд┐рд╡рд┐рдзрддрд╛ рд╕реЗ рд╕рдореГрджреНрдз - рдиреЗрдкрд╛рд▓ рдХреА рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдВрдкрджрд╛ рдФрд░ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд рдХрд╛ рд╕рдВрд░рдХреНрд╖рдг рд╣рдорд╛рд░реА рд╕рд╛рдЭрд╛ рдЬрд┐рдореНрдореЗрджрд╛рд░реА рд╣реИ"
    }
};

// Function to update hero content
function updateHeroContent(language) {
    const heroSection = document.querySelector('.hero');
    const heroContentDiv = document.querySelector('.hero-content');
    
    if (heroSection && heroContentDiv) {
        const content = heroContent[language];
        
        // Create hero content structure
        heroContentDiv.innerHTML = `
            <h1 class="hero-title">${content.title}</h1>
            <p class="hero-subtitle">${content.subtitle}</p>
            <div class="hero-quote">${content.quote}</div>
        `;
        
        // Add animation classes
        heroContentDiv.classList.add('fade-in');
    }
}



// Function to update Nepal container content
function updateNepalContainer(language) {
    const nepalHeader = document.querySelector('.nepal-header');
    const nepalContainer = document.querySelector('.nepal-container');
    
    if (nepalHeader && nepalContainer) {
        const content = nepalContainerContent[language];
        
        // Update Nepal container content
        nepalContainer.innerHTML = `
            <h1 class="nepal-title">${content.title}</h1>
            <h2 class="nepal-subtitle">${content.subtitle}</h2>
        `;
        
        // Add animation classes
        nepalContainer.classList.add('fade-in');
    }
}

// Function to handle language switching
function switchLanguage(language) {
    updateHeroContent(language);
    updateNepalContainer(language);
    
    // Update other language-dependent content
    updateAllContent(language);
}

// Initialize content on page load
document.addEventListener('DOMContentLoaded', () => {
    // Set default language
    const defaultLanguage = 'nepali';
    switchLanguage(defaultLanguage);
    
    // Add scroll animations
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('fade-in');
            }
        });
    });
    
    // Observe elements for scroll animations
    document.querySelectorAll('.hero-content, .nepal-container').forEach(el => {
        observer.observe(el);
    });
});

function switchLanguage(language) {
    // Update all elements with data-i18n attribute
    document.querySelectorAll('[data-i18n]').forEach(el => {
        const key = el.getAttribute('data-i18n');
        if (translations[language] && translations[language][key]) {
            // Handle different types of elements
            if (el.tagName === 'INPUT' && el.type === 'submit') {
                el.value = translations[language][key];
            } else if (el.tagName === 'INPUT' && el.type === 'text') {
                el.placeholder = translations[language][key];
            } else if (el.querySelector('img')) {
                // If there's a <font> after the <img>, update its text
                const font = el.querySelector('font');
                if (font) {
                    font.textContent = translations[language][key];
                } else {
                    // Otherwise, update the text node after the <img>
                    const img = el.querySelector('img');
                    let next = img.nextSibling;
                    // Find the first text node or element node after the image
                    while (next && (next.nodeType !== Node.TEXT_NODE && next.nodeType !== Node.ELEMENT_NODE)) {
                        next = next.nextSibling;
                    }
                    if (next && next.nodeType === Node.TEXT_NODE) {
                        next.textContent = translations[language][key];
                    } else if (next && next.nodeType === Node.ELEMENT_NODE) {
                        next.textContent = translations[language][key];
                    }
                }
            } else {
                el.textContent = translations[language][key];
            }
        }
    });

    // Update page title
    document.title = translations[language]['page-title'] || document.title;

    // Update language selector
    const languageSelector = document.querySelector('.language-selector');
    if (languageSelector) {
        languageSelector.value = language;
    }

    // Store the language preference
    localStorage.setItem('preferredLanguage', language);

    // Update font family based on language
    document.body.style.fontFamily = language === 'nepali' || language === 'hindi' ? 'Noto Sans Devanagari, sans-serif' : 'Poppins, sans-serif';

    // Update footer content visibility
    const footerContents = document.querySelectorAll('.nepali-content, .english-content, .hindi-content');
    footerContents.forEach(content => {
        content.style.display = 'none';
    });
    
    const selectedContent = document.querySelector(`.${language}-content`);
    if (selectedContent) {
        selectedContent.style.display = 'block';
    }
}

// Set initial language based on stored preference or default to Nepali
document.addEventListener('DOMContentLoaded', () => {
    const storedLanguage = localStorage.getItem('preferredLanguage') || 'nepali';
    switchLanguage(storedLanguage);
});

function toggleMenu() {
    const navLinks = document.querySelector('.nav-links');
    navLinks.classList.toggle('active');
    if (activeDropdown) {
        hideDropdown(activeDropdown);
    }
}

function toggleSideMenu() {
    const sideMenu = document.getElementById('side-menu');
    const backdrop = document.getElementById('side-menu-backdrop');
    sideMenu.classList.toggle('active');
    backdrop.classList.toggle('active');
}

function showDropdown(dropdownId) {
    if (activeDropdown === dropdownId) return;
    if (activeDropdown) {
        hideDropdown(activeDropdown);
    }

    const dropdown = document.getElementById(dropdownId);
    const backdrop = document.getElementById('dropdown-backdrop');
    if (dropdown) {
        // Ensure all images in the dropdown have proper sources
        const dropdownImages = dropdown.querySelectorAll('img');
        dropdownImages.forEach(img => {
            const src = img.getAttribute('src');
            if (src) {
                // Only fix the path if it's a relative path
                if (!src.startsWith('http') && !src.startsWith('/')) {
                    const imageName = src.split('/').pop();
                    img.src = `images/${imageName}`;
                }
            }
        });

        dropdown.classList.add('active');
        backdrop.classList.add('active');
        document.getElementById('navbar').classList.add('active');
        activeDropdown = dropdownId;

        // Animate dropdown items
        const items = dropdown.querySelectorAll('.dropdown-item');
        items.forEach((item, index) => {
            setTimeout(() => {
                item.classList.add('animate');
            }, index * 100);
        });
    }
}

function hideDropdown(dropdownId) {
    const dropdown = document.getElementById(dropdownId);
    const backdrop = document.getElementById('dropdown-backdrop');
    if (dropdown) {
        dropdown.classList.remove('active');
        backdrop.classList.remove('active');
        document.getElementById('navbar').classList.remove('active');
        activeDropdown = null;

        // Reset animation for dropdown items
        const items = dropdown.querySelectorAll('.dropdown-item');
        items.forEach(item => {
            item.classList.remove('animate');
        });
    }
}

function handleLogin(event) {
    event.preventDefault();
    const email = document.getElementById('login-email').value;
    const password = document.getElementById('login-password').value;
    const messageDiv = document.getElementById('login-message');

    // Basic validation
    if (!/^\S+@\S+\.\S+$/.test(email)) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Please enter a valid email.';
        return;
    }
    if (password.length < 6) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Password must be at least 6 characters.';
        return;
    }

    // Mock login success
    messageDiv.className = 'success';
    messageDiv.textContent = 'Login successful!';
    document.getElementById('login-form').reset();
    setTimeout(() => {
        toggleSideMenu();
        messageDiv.textContent = '';
    }, 1500);
}

function handleRegister(event) {
    event.preventDefault();
    const username = document.getElementById('register-username').value;
    const email = document.getElementById('register-email').value;
    const password = document.getElementById('register-password').value;
    const confirmPassword = document.getElementById('register-confirm-password').value;
    const messageDiv = document.getElementById('register-message');

    // Basic validation
    if (username.length < 3) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Username must be at least 3 characters.';
        return;
    }
    if (!/^\S+@\S+\.\S+$/.test(email)) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Please enter a valid email.';
        return;
    }
    if (password.length < 6) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Password must be at least 6 characters.';
        return;
    }
    if (password !== confirmPassword) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Passwords do not match.';
        return;
    }

    // Mock register success
    messageDiv.className = 'success';
    messageDiv.textContent = 'Registration successful!';
    document.getElementById('register-form').reset();
    setTimeout(() => {
        toggleSideMenu();
        messageDiv.textContent = '';
    }, 1500);
}

// Smooth scroll for anchor links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const targetId = this.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
            targetElement.scrollIntoView({
                behavior: 'smooth'
            });
        }
        if (activeDropdown) {
            hideDropdown(activeDropdown);
        }
        if (window.innerWidth <= 768) {
            toggleMenu();
        }
    });
});

// Handle dropdown interactions
document.querySelectorAll('.nav-link').forEach(link => {
    const dropdownId = link.getAttribute('data-dropdown');
    if (window.innerWidth > 768) {
        link.addEventListener('mouseenter', () => showDropdown(dropdownId));
        link.addEventListener('mouseleave', () => setTimeout(() => {
            if (!document.querySelector(`#${dropdownId}:hover`)) {
                hideDropdown(dropdownId);
            }
        }, 300));
        document.getElementById(dropdownId).addEventListener('mouseenter', () => {
            showDropdown(dropdownId);
        });
        document.getElementById(dropdownId).addEventListener('mouseleave', () => {
            hideDropdown(dropdownId);
        });
    } else {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            showDropdown(dropdownId);
        });
    }
});

// Close dropdown when clicking backdrop
document.getElementById('dropdown-backdrop').addEventListener('click', () => {
    if (activeDropdown) {
        hideDropdown(activeDropdown);
    }
});

// Close side menu when clicking backdrop
document.getElementById('side-menu-backdrop').addEventListener('click', () => {
    toggleSideMenu();
});

// Show more details (simulated)
function showMore(sectorId) {
    const sector = document.getElementById(sectorId);
    const newContent = document.createElement("div");
    newContent.innerHTML = `
        <h3 style="margin-top:20px;color:#1a5276">рдЕрддрд┐рд░рд┐рдХреНрдд рд╡рд┐рд╡рд░рдг</h3>
        <p>рдпрд╕ рдпреЛрдЬрдирд╛рдХреЛ рдХрд╛рд░реНрдпрд╛рдиреНрд╡рдпрдирдХрд╛ рд▓рд╛рдЧрд┐ рдирд┐рдореНрди рдХрджрдорд╣рд░реВ рдЕрдкрдирд╛рдЗрдиреЗрдЫ:</p>
        <ul>
            <li>рддреНрд░реИрдорд╛рд╕рд┐рдХ рдкреНрд░рдЧрддрд┐ рдореВрд▓реНрдпрд╛рдЩреНрдХрди</li>
            <li>рд╕реНрдерд╛рдиреАрдп рд╕рд░рдХрд╛рд░ рд╕рдВрдЧ рд╕рдордиреНрд╡рдп</li>
            <li>рдирд┐рдЬреАрдХреНрд╖реЗрддреНрд░рдХреЛ рд╕рд╣рднрд╛рдЧрд┐рддрд╛</li>
        </ul>
        <button class="btn" onclick="closeDetails(this)">рдмрдиреНрдж рдЧрд░реНрдиреБрд╣реЛрд╕реН</button>
    `;
    sector.appendChild(newContent);
}

function closeDetails(button) {
    button.parentElement.remove();
}

// Initialize - animate first sector
document.addEventListener("DOMContentLoaded", function() {
    // Open first sector by default
    document.querySelector(".sector h2").click();
    
    // Add animation to list items
    const items = document.querySelectorAll("li");
    items.forEach((item, index) => {
        item.style.animation = `fadeIn 0.5s ease ${index * 0.1}s forwards`;
        item.style.opacity = "0";
    });
});

// Fade-in animation for sections
const sections = document.querySelectorAll('.section-hidden');
const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('section-visible');
            observer.unobserve(entry.target);
        }
    });
}, { threshold: 0.2 });

sections.forEach(section => observer.observe(section));

// Toggle detailed content
const buttons = document.querySelectorAll('.btn-animate');
buttons.forEach(button => {
    button.addEventListener('click', () => {
        const content = button.nextElementSibling;
        content.classList.toggle('open');
    });
});

function toggleNepalSector(contentId) {
    const content = document.getElementById(contentId);
    const icon = content.previousElementSibling.querySelector('.nepal-toggle-icon');
    
    // Toggle content visibility
    content.classList.toggle('nepal-content-active');
    
    // Toggle icon
    icon.textContent = content.classList.contains('nepal-content-active') ? 'тИТ' : '+';
    
    // Animate action items if content is being shown
    if (content.classList.contains('nepal-content-active')) {
        const actionItems = content.querySelectorAll('.nepal-action-item');
        actionItems.forEach((item, index) => {
            setTimeout(() => {
                item.classList.add('animate');
            }, index * 100);
        });
        
        // Animate progress bar if it exists
        const progressBar = content.querySelector('.nepal-progress-bar');
        if (progressBar) {
            animateNepalProgressBar(progressBar.id);
        }
    } else {
        // Remove animation classes when hiding
        const actionItems = content.querySelectorAll('.nepal-action-item');
        actionItems.forEach(item => {
            item.classList.remove('animate');
        });
    }
}

function animateNepalProgressBar(progressId) {
    const progressBar = document.getElementById(progressId);
    if (!progressBar) return;
    
    const targetWidth = progressBar.getAttribute('data-progress') || '100%';
    progressBar.style.width = '0%';
    
    setTimeout(() => {
        progressBar.style.width = targetWidth;
    }, 100);
}

// Add hover effect for action items
document.addEventListener('DOMContentLoaded', function() {
    const actionItems = document.querySelectorAll('.nepal-action-item');
    
    actionItems.forEach(item => {
        item.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-5px)';
            this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.15)';
        });
        
        item.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
            this.style.boxShadow = '0 2px 10px rgba(220, 61, 61, 0.05)';
        });
    });
    
    // Initialize first sector
    const firstSector = document.querySelector('.nepal-sector');
    if (firstSector) {
        const contentId = firstSector.querySelector('.nepal-sector-content').id;
        toggleNepalSector(contentId);
    }
});

function handleFormSubmit(event) {
    event.preventDefault();
    
    const formData = {
        name: document.getElementById('name').value,
        email: document.getElementById('email').value,
        subject: document.getElementById('subject').value,
        message: document.getElementById('message').value
    };




    
    // Here you would typically send the form data to your server
    // For now, we'll just show a success message
    alert('рдзрдиреНрдпрд╡рд╛рдж! рддрдкрд╛рдИрдВрдХреЛ рд╕рдиреНрджреЗрд╢ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкрдард╛рдЗрдпреЛред');
    
    // Reset the form
    document.getElementById('contactForm').reset();
}

document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm');
    
    form.addEventListener('submit', function(e) {
        // Clear previous errors
        clearErrors();
        
        // Validate form
        if (!validateForm()) {
            e.preventDefault();
        }
    });
    
    function validateForm() {
        let isValid = true;
        
        // Validate name
        const name = document.getElementById('name');
        if (name.value.trim() === '') {
            showError(name, 'рдХреГрдкрдпрд╛ рдЖрдлреНрдиреЛ рдирд╛рдо рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        }
        
        // Validate email
        const email = document.getElementById('email');
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (email.value.trim() === '') {
            showError(email, 'рдХреГрдкрдпрд╛ рдЗрдореЗрд▓ рдареЗрдЧрд╛рдирд╛ рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        } else if (!emailRegex.test(email.value)) {
            showError(email, 'рдХреГрдкрдпрд╛ рд╡реИрдз рдЗрдореЗрд▓ рдареЗрдЧрд╛рдирд╛ рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        }
        
        // Validate subject
        const subject = document.getElementById('subject');
        if (subject.value === '') {
            showError(subject, 'рдХреГрдкрдпрд╛ рд╡рд┐рд╖рдп рдЫрд╛рдиреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        }
        
        // Validate message
        const message = document.getElementById('message');
        if (message.value.trim() === '') {
            showError(message, 'рдХреГрдкрдпрд╛ рд╕рдиреНрджреЗрд╢ рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        } else if (message.value.trim().length < 10) {
            showError(message, 'рд╕рдиреНрджреЗрд╢ рдзреЗрд░реИ рдЫреЛрдЯреЛ рдЫ (рдХрдореНрддрд┐рдорд╛ резреж рдЕрдХреНрд╖рд░)');
            isValid = false;
        }
        
        return isValid;
    }
    
    function showError(input, message) {
        const formGroup = input.parentElement;
        const errorElement = document.createElement('div');
        errorElement.className = 'error';
        errorElement.textContent = message;
        formGroup.appendChild(errorElement);
        input.style.borderColor = '#e74c3c';
    }
    
    function clearErrors() {
        const errors = document.querySelectorAll('.error');
        errors.forEach(error => error.remove());
        
        const inputs = document.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
            input.style.borderColor = '#ddd';
        });
    }
});

//handle form submission

document.getElementById('contactForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const form = e.target;
    const formData = new FormData(form);
    const submitBtn = form.querySelector('button[type="submit"]');
    
    // Disable submit button during submission
    submitBtn.disabled = true;
    submitBtn.textContent = 'Sending...';
    
    fetch(form.action, {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Show success message
            alert(data.message);
            form.reset();
        } else {
            // Show error messages
            if (data.errors) {
                for (const field in data.errors) {
                    const input = form.querySelector(`[name="${field}"]`);
                    if (input) {
                        input.style.borderColor = 'red';
                        const errorDiv = document.createElement('div');
                        errorDiv.className = 'error-message';
                        errorDiv.style.color = 'red';
                        errorDiv.textContent = data.errors[field];
                        input.parentNode.appendChild(errorDiv);
                    }
                }
            }
            alert(data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('An error occurred. Please try again later.');
    })
    .finally(() => {
        submitBtn.disabled = false;
        submitBtn.textContent = 'рдкрдард╛рдЙрдиреБрд╣реЛрд╕реН';
    });
});

 // Responsive adjustments
        function adjustLayout() {
            const contactGrid = document.querySelector('.contact-grid');
            if (window.innerWidth < 768) {
                // Mobile-specific adjustments if needed
            } else {
                // Desktop layout
            }
        }
        
        // Run on load and resize
        window.addEventListener('load', adjustLayout);
        window.addEventListener('resize', adjustLayout);



        // Only for Video section


                // Toggle functionality for the sector
        document.querySelector('.mero-nepal-sector-header').addEventListener('click', function() {
            const content = document.querySelector('.mero-nepal-sector-content');
            const icon = document.querySelector('.mero-nepal-toggle-icon');
            
            if (content.style.display === 'none') {
                content.style.display = 'block';
                icon.textContent = '-';
            } else {
                content.style.display = 'none';
                icon.textContent = '+';
            }
        });
        
        // Video modal functionality
        const videoModal = document.getElementById('videoModal');
        const videoPlayer = document.getElementById('videoPlayer');
        
        // Open modal with selected video
        document.querySelectorAll('.mero-nepal-video-card').forEach(card => {
            card.addEventListener('click', function() {
                const videoSrc = this.getAttribute('data-video');
                videoPlayer.src = videoSrc;
                videoModal.style.display = 'flex';
                videoPlayer.play();
            });
        });
        
        // Close modal
        function closeVideoModal() {
            videoModal.style.display = 'none';
            videoPlayer.pause();
            videoPlayer.currentTime = 0;
        }
        
        // Close when clicking outside video
        videoModal.addEventListener('click', function(e) {
            if (e.target === videoModal) {
                closeVideoModal();
            }
        });




       